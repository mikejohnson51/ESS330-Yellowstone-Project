{
  "hash": "7985d97364c4e13c7ab01cab08c9563f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ESS330 Yellowstone Project\"\nauthors:\n  - name: Sammy Tetrault\n    affiliation: CSU\n    roles: coding\n    corresponding: true\n  - name: Zoe Gagalis\n    affiliation: CSU\n    roles: coding\n    corresponding: true\n  - name: Zoe Ellis\n    affiliation: CSU\n    roles: coding\n    corresponding: true\ndate: \"2025-04-09\"\nformat: html\nexecute:\n  echo: true\nbibliography: \"docs/references.bib\"\n---\n\n\n## Data Exploration\n#### Data Description\nThe data that we are looking at comes from a study conducted by David Cooper and Tom Hobbs of Colorado State University. Their study investigated Salix height as a response to browsing and the water table [@cooper].For our study, we are interested in the relationship between wolf population count and grazer population counts (elk and bison). The first dataset that we are using is a bison data csv which includes date, population count, adult count, and calf count. The second dataset is a wolf data csv which includes site, year, and population count. The third dataset is an elk data csv which includes year, mean population count, and upper and lower confidence intervals. \n\n#### Opening the data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbison_data <- read.csv(\"C:/Users/sammy/OneDrive/Desktop/ESS330/ESS330-Yellowstone-Project/data/BisonData2000_2023.csv\")\n\nelk_data <- read.csv(\"C:/Users/sammy/OneDrive/Desktop/ESS330/ESS330-Yellowstone-Project/data/corrected_elk_counts_09Jul2023_Park_only.csv\")\n\nwolf_data <- read.csv(\"C:/Users/sammy/OneDrive/Desktop/ESS330/ESS330-Yellowstone-Project/data/wolf_1995_2022_population_ynp_nr_nnrr.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in read.table(file = file, header = header, sep = sep, quote = quote, :\nincomplete final line found by readTableHeader on\n'C:/Users/sammy/OneDrive/Desktop/ESS330/ESS330-Yellowstone-Project/data/wolf_1995_2022_population_ynp_nr_nnrr.csv'\n```\n\n\n:::\n:::\n\n\n\n#### Cleaning the data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(flextable)\nlibrary(tidyr)\n\n#reformat the wolf dataset to have a year column rather than each year as its own column\nwolf_data <- wolf_data %>%\n  pivot_longer(cols = c(X1995:X2021),\n               names_to = \"year\",\n               values_to = \"wolf_count\")\n\n#only keep \"Yellowstone National Park\" site data\nwolf_data <- wolf_data %>%\n  filter(Site == \"Yellowstone National Park\") %>%\n  select(year, wolf_count)\n\n#remove X from years \nwolf_data <- wolf_data %>%\n  mutate(year = case_when(\n                   year == \"X1995\" ~ 1995,\n                   year == \"X1996\" ~ 1996,\n                   year == \"X1997\" ~ 1997,\n                   year == \"X1998\" ~ 1998,\n                   year == \"X1999\" ~ 1999,\n                   year == \"X2000\" ~ 2000,\n                   year == \"X2001\" ~ 2001,\n                   year == \"X2002\" ~ 2002,\n                   year == \"X2003\" ~ 2003,\n                   year == \"X2004\" ~ 2004,\n                   year == \"X2005\" ~ 2005,\n                   year == \"X2006\" ~ 2006,\n                   year == \"X2007\" ~ 2007,\n                   year == \"X2008\" ~ 2008,\n                   year == \"X2009\" ~ 2009,\n                   year == \"X2010\" ~ 2010,\n                   year == \"X2011\" ~ 2011,\n                   year == \"X2012\" ~ 2012,\n                   year == \"X2013\" ~ 2013,\n                   year == \"X2014\" ~ 2014,\n                   year == \"X2015\" ~ 2015,\n                   year == \"X2016\" ~ 2016,\n                   year == \"X2017\" ~ 2017,\n                   year == \"X2018\" ~ 2018,\n                   year == \"X2019\" ~ 2019,\n                   year == \"X2020\" ~ 2020,\n                   year == \"X2021\" ~ 2021,\n                   TRUE ~ as.integer(year)\n  ))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `year = case_when(...)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#filtering elk data for just year and count columns\nelk_data <- elk_data %>%\n  select(year, mean)\n\n#filtering bison data for just year and count columns\nbison_data <- bison_data %>%\n  select(year, total)\n\n#rename columns to count\nelk_data <- elk_data %>%\n  rename(elk_count = mean)\nbison_data <- bison_data %>%\n  rename(bison_count = total)\n\n\n#joining the different tables\ndata <- full_join(wolf_data, elk_data, by = \"year\") %>%\n  full_join(bison_data, by = \"year\")\n\n#removing NAs\ndata <- drop_na(data)\n```\n:::\n\n\n\n#### Visualizing the data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2)\n\nwolf_pop_plot = ggplot(data = data, aes(x = year, y = wolf_count)) +\n  geom_smooth(color = \"#1034A6\") +\n  labs(title = \"Yellowstone Wolf Population 2000-2021\",\n       x = \"year\",\n       y = \"wolf count\") +\n# making axes nicely visible\n  theme(axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text.x = element_text(size = 10, color = \"black\"),\n        axis.text.y = element_text(size = 10, color = \"black\"),\n        axis.line = element_line(color = \"black\", size = 0.5)) +\n  ggthemes::theme_fivethirtyeight()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nprint(wolf_pop_plot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}